<?xml version="1.0" encoding="utf-8"?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:Groundsman"
             xmlns:behaviors="clr-namespace:Groundsman.Behaviors;assembly=Groundsman"
             x:Class="Groundsman.MyFeaturesView"
             Title="My Features"
             BackgroundColor="{DynamicResource bgPrimary}">
    <ContentPage.ToolbarItems>
        <ToolbarItem AutomationId="id_icon" Icon="share_icon" Command="{Binding ShareButtonTappedCommand}" />
    </ContentPage.ToolbarItems>
    <ContentPage.BindingContext>
        <local:MyFeaturesViewModel x:Name="viewModel" />
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <local:ItemTappedEventArgsToItemTappedConverter x:Key="TappedItemConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <AbsoluteLayout x:Name="absLayout">
        <ListView HeightRequest="{Binding Path=Height, Source={x:Reference absLayout}}" x:Name="listView" ItemsSource="{Binding GeoJSONStore.features, Source={x:Reference Name=viewModel}}" HasUnevenRows="True" SeparatorColor="{DynamicResource bgTertiary}">
            <ListView.Behaviors>
                <behaviors:ListViewItemTappedBehaviour Command="{Binding ItemTappedCommand}" Converter="{StaticResource TappedItemConverter}" />
            </ListView.Behaviors>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell>
                        <ViewCell.ContextActions>
                            <MenuItem Command="{Binding EditEntryCommand, Source={x:Reference Name=viewModel}}" CommandParameter="{Binding .}" Text="Edit" />
                            <MenuItem Command="{Binding DeleteEntryCommand, Source={x:Reference Name=viewModel}}" CommandParameter="{Binding .}" Text="Delete" IsDestructive="True" />
                        </ViewCell.ContextActions>
                        <!-- Grid definition of 2x4 for each label entry -->
                        <StackLayout Orientation="Horizontal" Padding="10,4,10,4">
                            <!--Each label is created using the grid layout, with an icon at the front and 2 vertically layered text strings.-->
                            <Image Source="{Binding properties.typeIconPath}" HeightRequest="36" WidthRequest="36" HorizontalOptions="Center" VerticalOptions="Center" />
                            <StackLayout Orientation="Vertical">
                                <Label Style="{StaticResource ListLabelStyle}" Text="{Binding properties.name}"/>
                                <StackLayout Orientation="Horizontal">
                                    <Label Text="{Binding properties.date, StringFormat='{0:d/M/yy}'}" TextColor="{DynamicResource textSecondary}" HorizontalTextAlignment="Start" FontSize="Small" LineBreakMode="TailTruncation" />
                                    <Label Text="{Binding properties.author, StringFormat='{0:N}'}" TextColor="{DynamicResource textTertiary}" HorizontalTextAlignment="Start" FontSize="Small" LineBreakMode="TailTruncation" />
                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Footer>
                    <Label Text="{Binding GeoJSONStore.features.Count, StringFormat='{0} Features', Source={x:Reference Name=viewModel}}" TextColor="{DynamicResource textSecondary}"  Padding="10" FontSize="Small"/>
            </ListView.Footer>
        </ListView>
        <Button AbsoluteLayout.LayoutFlags="PositionProportional" AbsoluteLayout.LayoutBounds="1.0,1.0,-1,-1" Margin="10" WidthRequest="50" HeightRequest="50" BorderRadius="25" BackgroundColor="{StaticResource greenPrimary}" Image="add_icon" Command="{Binding AddButtonTappedCommand}"/>
    </AbsoluteLayout>

</ContentPage>