<?xml version="1.0" encoding="utf-8" ?>
<ContentPage x:Class="Groundsman.MyFeaturesView"
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:behaviors="clr-namespace:Groundsman.Behaviors;assembly=Groundsman"
             xmlns:local="clr-namespace:Groundsman"
             Title="My Features"
             BackgroundColor="{DynamicResource bgPrimary}">
    <ContentPage.ToolbarItems>
        <ToolbarItem AutomationId="id_icon"
                     Command="{Binding ShareButtonTappedCommand}"
                     Icon="share_icon" />
    </ContentPage.ToolbarItems>
    <ContentPage.BindingContext>
        <local:MyFeaturesViewModel x:Name="viewModel" />
    </ContentPage.BindingContext>
    <ContentPage.Resources>
        <ResourceDictionary>
            <local:ItemTappedEventArgsToItemTappedConverter x:Key="TappedItemConverter" />
        </ResourceDictionary>
    </ContentPage.Resources>

    <AbsoluteLayout x:Name="absLayout">
        <ListView x:Name="listView"
                  HasUnevenRows="True"
                  HeightRequest="{Binding Path=Height, Source={x:Reference absLayout}}"
                  ItemsSource="{Binding FeatureList.features, Source={x:Reference Name=viewModel}}"
                  SeparatorColor="{DynamicResource bgTertiary}">
            <ListView.Behaviors>
                <behaviors:ListViewItemTappedBehaviour Command="{Binding ItemTappedCommand}" Converter="{StaticResource TappedItemConverter}" />
            </ListView.Behaviors>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <ViewCell>
                        <ViewCell.ContextActions>
                            <MenuItem Command="{Binding EditEntryCommand, Source={x:Reference Name=viewModel}}"
                                      CommandParameter="{Binding .}"
                                      Text="Edit" />
                            <MenuItem Command="{Binding DeleteEntryCommand, Source={x:Reference Name=viewModel}}"
                                      CommandParameter="{Binding .}"
                                      IsDestructive="True"
                                      Text="Delete" />
                        </ViewCell.ContextActions>
                        <!--  Grid definition of 2x4 for each label entry  -->
                        <StackLayout Padding="10,4,10,4" Orientation="Horizontal">
                            <!--  Each label is created using the grid layout, with an icon at the front and 2 vertically layered text strings.  -->
                            <Image HeightRequest="36"
                                   HorizontalOptions="Center"
                                   Source="{Binding properties.typeIconPath}"
                                   VerticalOptions="Center"
                                   WidthRequest="36" />
                            <StackLayout Orientation="Vertical">
                                <Label Style="{StaticResource ListLabelStyle}" Text="{Binding properties.name}" />
                                <StackLayout Orientation="Horizontal">
                                    <Label FontSize="Small"
                                           HorizontalTextAlignment="Start"
                                           LineBreakMode="TailTruncation"
                                           Text="{Binding properties.date, StringFormat='{0:d/M/yy}'}"
                                           TextColor="{DynamicResource textSecondary}" />
                                    <Label FontSize="Small"
                                           HorizontalTextAlignment="Start"
                                           LineBreakMode="TailTruncation"
                                           Text="{Binding properties.author, StringFormat='{0:N}'}"
                                           TextColor="{DynamicResource textTertiary}" />
                                </StackLayout>
                            </StackLayout>
                        </StackLayout>
                    </ViewCell>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.Footer>
                <Label Padding="10"
                       FontSize="Small"
                       Text="{Binding FeatureList.features.Count, StringFormat='{0} Features', Source={x:Reference Name=viewModel}}"
                       TextColor="{DynamicResource textSecondary}" />
            </ListView.Footer>
        </ListView>
        <Button Margin="10"
                AbsoluteLayout.LayoutBounds="1.0,1.0,-1,-1"
                AbsoluteLayout.LayoutFlags="PositionProportional"
                BackgroundColor="{StaticResource greenPrimary}"
                BorderRadius="25"
                Command="{Binding AddButtonTappedCommand}"
                HeightRequest="50"
                Image="add_icon"
                WidthRequest="50" />
    </AbsoluteLayout>

</ContentPage>