using System.IO;
using System.Reflection;
using Xamarin.Essentials;

namespace Groundsman
{
    public static class AppConstants
    {
        private static readonly string DATA_PATH = FileSystem.AppDataDirectory;
        private static readonly string CACHE_PATH = FileSystem.CacheDirectory;

        private static readonly string FEATURES_FILENAME = "locations.json";
        private static readonly string LOG_FILENAME = "log.csv";
        private static readonly string EXPORT_LOG_FILENAME = "Groundsman Log.csv";
        private static readonly string DELETED_FEATURE_FILENAME = "deleted.json";

        public static readonly string NEW_ENTRY_ID = "-1";
        public static readonly string FEATURES_FILE = Path.Combine(DATA_PATH, FEATURES_FILENAME);
        public static readonly string LOG_FILE = Path.Combine(DATA_PATH, LOG_FILENAME);
        public static readonly string EXPORT_LOG_FILE = Path.Combine(CACHE_PATH, EXPORT_LOG_FILENAME);
        public static readonly string DELETED_FEATURE_FILE = Path.Combine(CACHE_PATH, DELETED_FEATURE_FILENAME);

        public static string GetExportFile(string fileName)
        {
            return Path.Combine(CACHE_PATH, fileName + ".json");
        }

        public static string GetFeaturesFile()
        {
            if (File.Exists(FEATURES_FILE))
            {
                string text = File.ReadAllText(FEATURES_FILE);
                return text;
            }
            else
            {
                return GetTemplateFile();
            }
        }

        public static string GetTemplateFile()
        {
            var assembly = IntrospectionExtensions.GetTypeInfo(App.Current.GetType()).Assembly;
            Stream stream = assembly.GetManifestResourceStream("Groundsman.locationsAutoGenerated.json");
            string text = "";
            using (var reader = new StreamReader(stream))
            {
                text = reader.ReadToEnd();
            }
            return text;
        }
    }
}
